/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tugasakhir1;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class listbrg extends javax.swing.JDialog {

    /**
     * Creates new form listbrg
     */
    public listbrg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ttabel = new javax.swing.JTable();
        broti = new javax.swing.JButton();
        bkue = new javax.swing.JButton();
        bpaket = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        ttabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ttabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ttabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ttabel);

        broti.setText("Roti");
        broti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotiActionPerformed(evt);
            }
        });

        bkue.setText("Kue");
        bkue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkueActionPerformed(evt);
            }
        });

        bpaket.setText("Paket");
        bpaket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpaketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(broti)
                        .addGap(18, 18, 18)
                        .addComponent(bkue)
                        .addGap(18, 18, 18)
                        .addComponent(bpaket)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(broti)
                    .addComponent(bkue)
                    .addComponent(bpaket))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void brotiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brotiActionPerformed
        tampil_tabel_roti();
    }//GEN-LAST:event_brotiActionPerformed

    private void bpaketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpaketActionPerformed
        tampil_tabel_Paket();
    }//GEN-LAST:event_bpaketActionPerformed

    private void bkueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkueActionPerformed
        tampil_tabel_Kue();
    }//GEN-LAST:event_bkueActionPerformed

    private void ttabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ttabelMouseClicked
        insertdata();
    }//GEN-LAST:event_ttabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listbrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listbrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listbrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listbrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                listbrg dialog = new listbrg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bkue;
    private javax.swing.JButton bpaket;
    private javax.swing.JButton broti;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ttabel;
    // End of variables declaration//GEN-END:variables
void tampil_tabel_roti(){
        DefaultTableModel model= new  DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("HARGA");
        model.addColumn("STOK");
        
        try {
            String sql = "SELECT * FROM stok WHERE kategori = 'roti'";
            java.sql.Connection conn = KoneksiRoti.ConfigDB();
            java.sql.Statement statement = conn.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery(sql);
            while(resultSet.next()){
            model.addRow(new Object[]{resultSet.getString("ID_Kue"),resultSet.getString("Nama_Kue"),resultSet.getString("Harga"),resultSet.getString("Stok")});
            }
            ttabel.setModel(model);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

void tampil_tabel_Kue(){
        DefaultTableModel model= new  DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("HARGA");
        model.addColumn("STOK");
        
        try {
            String sql = "SELECT * FROM stok WHERE kategori = 'Kue' ORDER BY ID_Kue";
            java.sql.Connection conn = KoneksiRoti.ConfigDB();
            java.sql.Statement statement = conn.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery(sql);
            while(resultSet.next()){
            model.addRow(new Object[]{resultSet.getString("ID_Kue"),resultSet.getString("Nama_Kue"),resultSet.getString("Harga"),resultSet.getString("Stok")});
            }
            ttabel.setModel(model);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

void tampil_tabel_Paket(){
        DefaultTableModel model= new  DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("HARGA");
        model.addColumn("STOK");
        
        try {
            String sql = "SELECT * FROM stok WHERE kategori = 'Paket' ORDER BY ID_Kue";
            java.sql.Connection conn = KoneksiRoti.ConfigDB();
            java.sql.Statement statement = conn.createStatement();
            java.sql.ResultSet resultSet = statement.executeQuery(sql);
            while(resultSet.next()){
            model.addRow(new Object[]{resultSet.getString("ID_Kue"),resultSet.getString("Nama_Kue"),resultSet.getString("Harga"),resultSet.getString("Stok")});
            }
            ttabel.setModel(model);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

void insertdata(){
        int i = ttabel.getSelectedRow();
        String id = ttabel.getValueAt(i, 0).toString();
        String nama = ttabel.getValueAt(i, 1).toString();
        String Harga = ttabel.getValueAt(i, 2).toString();
        String Qty = JOptionPane.showInputDialog("Masukkan jumlah: ");
        int harga = Integer.parseInt(Harga);
        int qty = Integer.parseInt(Qty);
        int subtotal = harga*qty;
        
        try {
            String sql = "INSERT INTO transsementara (id_barang, nama_barang, harga, jumlah, subtotal) VALUES (?,?,?,?,?)";
            java.sql.Connection conn = KoneksiRoti.ConfigDB();
            java.sql.PreparedStatement st = conn.prepareStatement(sql); {
                st.setString(1, id);
                st.setString(2, nama);
                st.setInt(3, harga);
                st.setInt(4, qty);
                st.setInt(5, subtotal);
                
                int rowInserted = st.executeUpdate();
                if (rowInserted > 0){
                    dispose();
                }
            } 
        } catch (Exception e) {
            e.printStackTrace();
        }
        
}

}
